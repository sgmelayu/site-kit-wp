name: PHP Tests

on:
  push:
    branches:
      - develop
      - main
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/php-tests-wp-4-7-php-5-6.yml'
      - includes/**
      - tests/phpunit/**
      - /*.php
      - 'phpunit*.xml*'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    branches:
      - develop
      - main
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/php-tests-wp-4-7-php-5-6.yml'
      - includes/**
      - tests/phpunit/**
      - /*.php
      - 'phpunit*.xml*'
      - 'composer.json'
      - 'composer.lock'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  php-tests-wp-4-7-php-5-6:
    name: PHP (PHP 5.6, WordPress 4.7)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: wordpress
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: wordpress
      MYSQL_DATABASE: wordpress_test
      WP_VERSION: '4.7'
    steps:
      - uses: styfle/cancel-workflow-action@0.8.0
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          extensions: mysqli, runkit
          tools: composer
          php-version: '5.6'
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer Install
        run: docker run --rm -v "$PWD:/app" -v "${{ steps.composer-cache.outputs.dir }}:/tmp/cache" composer install --no-interaction --no-progress # Run inside docker so composer install doesn't error...
      - name: Set up PHP test data
        run: tests/bin/install-wp-tests.sh ${MYSQL_DATABASE} ${MYSQL_USER} ${MYSQL_PASSWORD} ${DB_HOST}:${DB_PORT} ${WP_VERSION}
      - name: Run Unit Tests
        run: composer test
